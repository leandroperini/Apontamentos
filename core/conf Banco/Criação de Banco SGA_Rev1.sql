-- MySQL Script generated by MySQL Workbench
-- 04/01/16 23:04:17
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema SGA
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema SGA
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `SGA` DEFAULT CHARACTER SET utf8 ;
USE `SGA` ;

-- -----------------------------------------------------
-- Table `SGA`.`cargo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SGA`.`cargo` (
  `cargo_id` INT NOT NULL AUTO_INCREMENT,
  `cargo_nome` VARCHAR(45) NOT NULL,
  `cargo_audite` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`cargo_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SGA`.`nivel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SGA`.`nivel` (
  `nivel_id` INT NOT NULL,
  `nivel_desc` VARCHAR(45) NOT NULL,
  `nivel_audite` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`nivel_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SGA`.`funcionario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SGA`.`funcionario` (
  `func_id` INT NOT NULL,
  `func_nome` VARCHAR(150) NOT NULL,
  `func_email` VARCHAR(150) NOT NULL,
  `func_status` TINYINT(1) NOT NULL,
  `func_senha` VARCHAR(32) NOT NULL,
  `func_nivel` INT NOT NULL DEFAULT 1,
  `nivel_nivel_id` INT NOT NULL,
  `cargo_cargo_id` INT NOT NULL,
  `func_audite` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`func_id`, `nivel_nivel_id`, `cargo_cargo_id`),
  INDEX `fk_funcionario_nivel1_idx` (`nivel_nivel_id` ASC),
  INDEX `fk_funcionario_cargo1_idx` (`cargo_cargo_id` ASC),
  CONSTRAINT `fk_funcionario_nivel1`
    FOREIGN KEY (`nivel_nivel_id`)
    REFERENCES `SGA`.`nivel` (`nivel_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_funcionario_cargo1`
    FOREIGN KEY (`cargo_cargo_id`)
    REFERENCES `SGA`.`cargo` (`cargo_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SGA`.`apontamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SGA`.`apontamento` (
  `apont_id` INT NOT NULL,
  `apont_data` DATE NOT NULL,
  `apont_tag_deletado` TINYINT(1) NOT NULL DEFAULT 0,
  `apont_audite` DATETIME NOT NULL,
  `funcionario_func_id` INT NOT NULL,
  `funcionario_nivel_nivel_id` INT NOT NULL,
  `funcionario_cargo_cargo_id` INT NOT NULL,
  PRIMARY KEY (`apont_id`, `funcionario_func_id`, `funcionario_nivel_nivel_id`, `funcionario_cargo_cargo_id`),
  INDEX `fk_apontamento_funcionario1_idx` (`funcionario_func_id` ASC, `funcionario_nivel_nivel_id` ASC, `funcionario_cargo_cargo_id` ASC),
  CONSTRAINT `fk_apontamento_funcionario1`
    FOREIGN KEY (`funcionario_func_id` , `funcionario_nivel_nivel_id` , `funcionario_cargo_cargo_id`)
    REFERENCES `SGA`.`funcionario` (`func_id` , `nivel_nivel_id` , `cargo_cargo_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SGA`.`report`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SGA`.`report` (
  `report_id` INT NOT NULL,
  `report_desc` LONGTEXT NOT NULL,
  `report_data_solicita` DATE NOT NULL,
  `report_data_envio` DATE NOT NULL,
  `report_data_validada` DATE NOT NULL,
  `report_audite` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`report_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SGA`.`evento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SGA`.`evento` (
  `evento_id` INT NOT NULL,
  `evento_desc` LONGTEXT NOT NULL,
  `evento_hora_inicio` TIME NOT NULL,
  `evento_hora_fim` TIME NOT NULL,
  `evento_site` VARCHAR(45) NOT NULL,
  `evento_os` VARCHAR(45) NOT NULL,
  `evento_gestor` VARCHAR(45) NOT NULL,
  `evento_veiculo` VARCHAR(45) NOT NULL,
  `evento_motivação` DECIMAL(10,2) NOT NULL,
  `evento_audite` DATETIME NOT NULL,
  `evento_tag_deletado` TINYINT(1) NOT NULL DEFAULT 0,
  `apontamento_apont_id` INT NOT NULL,
  `apontamento_funcionario_func_id` INT NOT NULL,
  `apontamento_funcionario_nivel_nivel_id` INT NOT NULL,
  `apontamento_funcionario_cargo_cargo_id` INT NOT NULL,
  `report_report_id` INT NULL,
  PRIMARY KEY (`evento_id`, `apontamento_apont_id`, `apontamento_funcionario_func_id`, `apontamento_funcionario_nivel_nivel_id`, `apontamento_funcionario_cargo_cargo_id`, `report_report_id`),
  INDEX `fk_evento_apontamento1_idx` (`apontamento_apont_id` ASC, `apontamento_funcionario_func_id` ASC, `apontamento_funcionario_nivel_nivel_id` ASC, `apontamento_funcionario_cargo_cargo_id` ASC),
  INDEX `fk_evento_report1_idx` (`report_report_id` ASC),
  CONSTRAINT `fk_evento_apontamento1`
    FOREIGN KEY (`apontamento_apont_id` , `apontamento_funcionario_func_id` , `apontamento_funcionario_nivel_nivel_id` , `apontamento_funcionario_cargo_cargo_id`)
    REFERENCES `SGA`.`apontamento` (`apont_id` , `funcionario_func_id` , `funcionario_nivel_nivel_id` , `funcionario_cargo_cargo_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_evento_report1`
    FOREIGN KEY (`report_report_id`)
    REFERENCES `SGA`.`report` (`report_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SGA`.`pagina`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SGA`.`pagina` (
  `pagina_id` INT NOT NULL,
  `pagina_arquivo` VARCHAR(45) NOT NULL,
  `pagina_nome` VARCHAR(45) NOT NULL,
  `pagina_audite` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`pagina_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SGA`.`acesso_pagina`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SGA`.`acesso_pagina` (
  `pagina_pagina_id` INT NULL,
  `funcionario_func_id` INT NULL,
  `acesso_pagina_consultar` TINYINT(1) NOT NULL DEFAULT 0,
  `acesso_pagina_editar` TINYINT(1) NOT NULL DEFAULT 0,
  `acesso_pagina_incluir` TINYINT(1) NOT NULL DEFAULT 0,
  `acesso_pagina_excluir` TINYINT(1) NOT NULL DEFAULT 0,
  `acesso_pagina_audite` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`pagina_pagina_id`, `funcionario_func_id`),
  INDEX `fk_pagina_has_funcionario_funcionario1_idx` (`funcionario_func_id` ASC),
  INDEX `fk_pagina_has_funcionario_pagina_idx` (`pagina_pagina_id` ASC),
  CONSTRAINT `fk_pagina_has_funcionario_pagina`
    FOREIGN KEY (`pagina_pagina_id`)
    REFERENCES `SGA`.`pagina` (`pagina_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pagina_has_funcionario_funcionario1`
    FOREIGN KEY (`funcionario_func_id`)
    REFERENCES `SGA`.`funcionario` (`func_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SGA`.`campo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SGA`.`campo` (
  `campo_id` INT NOT NULL,
  `campo_nome` VARCHAR(45) NOT NULL,
  `pagina_pagina_id` INT NOT NULL,
  `campo_audite` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`campo_id`, `pagina_pagina_id`),
  INDEX `fk_campo_pagina1_idx` (`pagina_pagina_id` ASC),
  CONSTRAINT `fk_campo_pagina1`
    FOREIGN KEY (`pagina_pagina_id`)
    REFERENCES `SGA`.`pagina` (`pagina_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SGA`.`acesso_campo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SGA`.`acesso_campo` (
  `funcionario_func_id` INT NULL,
  `campo_campo_id` INT NULL,
  `campo_pagina_pagina_id` INT NULL,
  `acesso_campo_visivel` TINYINT(1) NULL DEFAULT 0,
  `acesso_campo_editavel` TINYINT(1) NULL DEFAULT 0,
  `acesso_campo_audite` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`funcionario_func_id`, `campo_campo_id`, `campo_pagina_pagina_id`),
  INDEX `fk_funcionario_has_campo_campo1_idx` (`campo_campo_id` ASC, `campo_pagina_pagina_id` ASC),
  INDEX `fk_funcionario_has_campo_funcionario1_idx` (`funcionario_func_id` ASC),
  CONSTRAINT `fk_funcionario_has_campo_funcionario1`
    FOREIGN KEY (`funcionario_func_id`)
    REFERENCES `SGA`.`funcionario` (`func_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_funcionario_has_campo_campo1`
    FOREIGN KEY (`campo_campo_id` , `campo_pagina_pagina_id`)
    REFERENCES `SGA`.`campo` (`campo_id` , `pagina_pagina_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
